<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.logis_app.Mapper.TransactionMapper">
    <select id="transactionList" resultType="com.example.logis_app.pojo.vo.TransactionVO.Transaction">
        SELECT transaction_id, transaction_type, item_id, amount, transaction_date, description
        FROM transactions
        ORDER BY transaction_date DESC
        Limit 10 OFFSET 1
    </select>

    <select id="findAllTransactionList" resultType="java.lang.Integer">
        SELECT count(*)
        FROM transactions
    </select>

    <select id="querySpecificTransaction" resultType="com.example.logis_app.pojo.vo.TransactionVO.Transaction">
        SELECT transaction_id, transaction_type, item_id, amount, transaction_date, description
        FROM transactions
        <where>
            <if test = "transactionType != null and transactionType !=  '' ">
                AND transaction_type LIKE CONCAT(#{transactionType}, '%')
            </if>

            <if test = "itemId != null">
                AND item_id = #{itemId}
            </if>

            <if test = "startDate != null and endDate != null ">
                AND transaction_date BETWEEN #{startDate} AND #{endDate}
            </if>
        </where>
        Limit #{pageLimit} OFFSET #{start}
    </select>

    <insert id="addNewTransaction" useGeneratedKeys="true" keyProperty="transactionId" >
        INSERT INTO transactions (transaction_type, item_id, amount, transaction_date, description)
        VALUES (#{transactionType}, #{itemId}, #{amount}, #{transactionDate}, #{description})
    </insert>

    <insert id="addNewTransactionDetails">
       <choose>
           <when test="transactionType == 'EXPENSE'">
           INSERT INTO transactions_expenses (transaction_id, item_id, expense_type, description,amount, expense_date)
           VALUES (#{transactionId}, #{itemId}, #{expenseType}, #{description}, #{amount}, #{transactionDate});
       </when>
        <when test="transactionType == 'SALE'">
            INSERT INTO transactions_sales (transaction_id, item_id, amount, sale_date)
            VALUES (#{transactionId}, #{itemId}, #{amount}, #{transactionDate});
        </when>
        <when test="transactionType == 'SALARY'">
            INSERT INTO transactions_salaries (transaction_id, user_id, amount, salary_date)
            VALUES (#{transactionId}, #{userId}, #{amount}, #{transactionDate});
        </when>
        <when test="transactionType == 'SUPPLIER_PAYMENT'">
            INSERT INTO transactions_supplier_payments (transaction_id, supplier_id, item_id, amount, payment_date)
            VALUES (#{transactionId}, #{supplierId}, #{itemId}, #{amount}, #{transactionDate});
        </when>
       </choose>
    </insert>

    <update id="addBalance">
        UPDATE company_balance
        SET total_balance = total_balance + #{amount},
         last_updated = NOW()
        where balance_id = 1;
    </update>

    <update id="minusBalance">
        UPDATE company_balance
        SET total_balance = total_balance - #{amount},
         last_updated = NOW()
        where balance_id = 1;
    </update>

    <update id="modifyTransaction">
        UPDATE transactions
        <set>
            <if test="transactionType != null">transaction_type = #{transactionType},</if>
            <if test="itemId != null">item_id = #{itemId},</if>
            <if test="amount != null">amount = #{amount},</if>
            <if test="transactionDate != null">transaction_date = #{transactionDate},</if>
            <if test="description != null">description = #{description},</if>
        </set>
        WHERE transaction_id = #{transactionId}
    </update>

    <update id="modifyTransactionDetails">
        <choose>
            <when test="transactionType == 'EXPENSE'">
                UPDATE transactions_expenses
                <set>
                    <if test="itemId != null">item_id = #{itemId},</if>
                    <if test="expenseType != null">expense_type = #{expenseType},</if>
                    <if test="description != null">description = #{description},</if>
                    <if test="amount != null">amount = #{amount},</if>
                    <if test="transactionDate != null">expense_date = #{transactionDate},</if>
                </set>
                WHERE transaction_id = #{transactionId};
            </when>

            <when test="transactionType == 'SALE'">
                UPDATE transactions_sales
                <set>
                    <if test="itemId != null">item_id = #{itemId},</if>
                    <if test="amount != null">amount = #{amount},</if>
                    <if test="transactionDate != null">sale_date = #{transactionDate},</if>
                </set>
                WHERE transaction_id = #{transactionId};
            </when>

            <when test="transactionType == 'SALARY'">
                UPDATE transactions_salaries
                <set>
                    <if test="userId != null">user_id = #{userId},</if>
                    <if test="amount != null">amount = #{amount},</if>
                    <if test="transactionDate != null">salary_date = #{transactionDate},</if>
                </set>
                WHERE transaction_id = #{transactionId};
            </when>

            <when test="transactionType == 'SUPPLIER_PAYMENT'">
                UPDATE transactions_supplier_payments
                <set>
                    <if test="supplierId != null">supplier_id = #{supplierId},</if>
                    <if test="itemId != null">item_id = #{itemId},</if>
                    <if test="amount != null">amount = #{amount},</if>
                    <if test="transactionDate != null">payment_date = #{transactionDate},</if>
                </set>
                WHERE transaction_id = #{transactionId};
            </when>
        </choose>
    </update>

    <delete id="deleteTransaction">
        DELETE FROM transactions
        WHERE transaction_id = #{id};
    </delete>





</mapper>